global !p
from snippet_module_c import *
from snippet_module_base import *

def includeGuardString():
  header_string = get_current_header_string()
  return "#ifndef " + header_string + "\n" + "#define " + header_string
endglobal

snippet head "Inserts the source code head" b
`!p
if uses_single_line_c_comments():
  snip.rv = '/// @file\n/// '
elif format_options_have_comment_leader():
  snip.rv = '/** @file\n * '
else:
  snip.rv = '/** @file\n  '
`${1}`!p
if uses_single_line_c_comments():
  snip.rv = ''
elif format_options_have_comment_leader():
  snip.rv = '\n */'
else:
  snip.rv = '\n*/'
`

`!p
if not re.match("^.*\.h(pp)?$", snip.fn):
  snip.rv = "#include \"" + snip.basename + ".h"
  if re.match("^.*\.cpp$", snip.fn):
    snip.rv += "pp"
  snip.rv += "\"\n\n"
else:
  snip.rv = includeGuardString() + "\n\n"
`${0}`!p
if re.match(".*\.h(pp)?", snip.fn):
  snip.rv = "\n\n#endif"`
endsnippet
snippet ig "Inserts include guard defines"
`!p snip.rv = includeGuardString()`
endsnippet
