global !p
from pathlib import Path
from snippet_module_base import *

def includeGuardString():
  buffer_cwd = Path(vim.eval("getcwd()"))
  buffer_path = Path(vim.current.buffer.name)

  if buffer_cwd in buffer_path.parents and \
      buffer_cwd != buffer_path.parent:
    header_string = os.path.basename(buffer_cwd)
    header_string += "/" + os.path.relpath(buffer_path, buffer_cwd)
  else:
    header_string = snip.fn

  header_string = get_underscore(header_string).upper()

  return "#ifndef " + header_string + "\n" + "#define " + header_string
endglobal

snippet head "Inserts the source code head" b
/** @file
	${1}
*/

`!p
if not re.match("^.*\.h(pp)?$", snip.fn):
  snip.rv = "#include \"" + snip.basename + ".h"
  if re.match("^.*\.cpp$", snip.fn):
    snip.rv += "pp"
  snip.rv += "\"\n\n"
else:
  snip.rv = includeGuardString() + "\n\n"
`${0}`!p
if re.match(".*\.h(pp)?", snip.fn):
  snip.rv = "\n\n#endif"`
endsnippet
snippet ig "Inserts include guard defines"
`!p snip.rv = includeGuardString()`
endsnippet
